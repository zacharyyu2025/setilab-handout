#!/usr/bin/env bash

################################################################################
# seti-cancel - Cancel a student's run job.
# NOTE: If this was an evaluation or handin job, a canceled job will NOT execute
# under Slurm and will NOT update the leaderboard. If this was a handin job,
# canceling the job does NOT cancel the handin.
#
#
# Karl Hallsby 2024
#
################################################################################

set -o noclobber
set -o errexit
set -o pipefail
set -o nounset
set +x
# shopt -s nullglob
# shopt -s failglob

#
# Directory of the called script
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Make sure Slurm binaries are available
source "$SCRIPT_DIR/slurm-setup"

function usage {
    local me="$(basename "$(test -L "$0" && readlink "$0" || echo "$0")")"
    echo "Usage: ${me} [-h|--help] [job_id]..."
    echo "Cancel one or more SETILab job runs based on provided job_ids"
    echo "NOTE: Canceling a handin job does NOT cancel the handin, only the"
    echo "  evaluation!"
    echo
    echo "  -h, --help              display this help and exit"
    echo
}

#
# Command-line argument processing
CLI_ARGS=$(getopt -o h --long help -n 'seti-cancel' -- "$@")
eval set -- "$CLI_ARGS"

while true; do
    case "$1" in
	-h | --help )
	    usage
	    exit 0
	    ;;
	-- ) shift; break ;;
	* ) break ;;
    esac
done

if [[ $# -lt 1 ]]; then
    me="$(basename "$(test -L "$0" && readlink "$0" || echo "$0")")"
    echo "${me}: error: No job IDs provided"
    echo
    usage
    exit 1
fi

echo "Cancelling jobs/runs $@"

# Cancel the jobs the student requested
# NOTE: We rely on Slurm preventing two different users under the same account
# from cancelling each other's jobs.
scancel $@
